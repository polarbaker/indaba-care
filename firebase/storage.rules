rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Base rule - deny by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Allow access to photos by family members
    match /photos/{familyId}/{childId}/{photoId} {
      // Only allow authenticated users
      function isAuthenticated() {
        return request.auth != null;
      }
      
      // Allow read if the user is the owner of the family
      function isFamilyMember() {
        return isAuthenticated() && 
               request.auth.uid == familyId;
      }
      
      // Allow listing photos
      allow list: if isFamilyMember();
      
      // Allow reading photos
      allow get: if isFamilyMember();
      
      // Allow uploading photos with size and content type validation
      allow create: if isFamilyMember() &&
                      request.resource.size < 5 * 1024 * 1024 && // 5MB max
                      request.resource.contentType.matches('image/.*') && // Only allow images
                      request.resource.metadata.childId == childId; // Verify metadata
      
      // Allow updating photo metadata
      allow update: if isFamilyMember();
      
      // Allow deleting photos
      allow delete: if isFamilyMember();
    }
    
    // Allow access to profile pictures
    match /profilePictures/{userId} {
      // Only allow the owner to manage their profile picture
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.auth.uid == userId &&
                     request.resource.size < 2 * 1024 * 1024 && // 2MB max
                     request.resource.contentType.matches('image/.*'); // Only allow images
    }
    
    // Allow access to resource thumbnails (public read, admin write)
    match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can write via backend
    }
  }
}
